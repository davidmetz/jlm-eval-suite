HLS_TEST_SRC = $(HLS_TEST_ROOT)/src
HLS_TEST_BUILD = $(HLS_TEST_ROOT)/build

HLS_TEST_FILES = \
	test-return.c \
	test-add.c \
	test-loop.c \
	test-nested-loops.c \

.PHONY: hls-test
hls-test:
	@mkdir -p $(HLS_TEST_BUILD)
	@cd $(HLS_TEST_BUILD) && \
		set -e ; \
		for TEST in $(HLS_TEST_FILES) ; do \
			$(HLS) $(HLS_TEST_SRC)/$$TEST --hls-function=run -o $(HLS_TEST_BUILD)/$$TEST.out 1> /dev/null ; \
		done ;

TESTLOG = true

.PHONY: hls-test-run
hls-test-run: hls-test
	@rm -rf $(HLS_TEST_ROOT)/hls-test.log
	@for TEST in $(HLS_TEST_FILES) ; do \
		$(TESTLOG) -n "$$TEST: " ; \
		if $(HLS_TEST_BUILD)/$$TEST.out >> $(HLS_TEST_ROOT)/hls-test.log 2>&1 ; then \
			$(TESTLOG) pass ; \
		else \
			$(TESTLOG) FAIL ; FAILED_TESTS="$$FAILED_TESTS $$TEST" ; fi ; \
	done ; \
	set -e ; \
	if [ "x$$FAILED_TESTS" != x ] ; then \
		printf '\033[0;31m%s\033[0m%s\n' "Failed hls-tests:" "$$FAILED_TESTS" ; exit 1 ; \
	else \
		printf '\033[0;32m%s\n\033[0m' "All hls-tests passed" ; fi ;

.PHONY: hls-test-clean
hls-test-clean:
	rm -rf $(HLS_TEST_BUILD) 
